{"version":3,"file":"static/js/884.6aeb3cf8.chunk.js","mappings":"8NACA,EAAuB,mB,SCKvB,EAJa,SAACA,GACZ,OAAO,gBAAKC,UAAWC,EAAa,SAAEF,EAAMG,UAC9C,E,SCHA,EAAuB,wBAAvB,EAAyD,2BAAzD,EAA8F,2BAA9F,EAAmI,2BC2DnI,EArDkB,SAACH,GACjB,IAAMI,GAAiBC,EAAAA,EAAAA,UACjBC,GAAeD,EAAAA,EAAAA,UAErB,GAAoCE,EAAAA,EAAAA,WAAS,GAAM,eAA5CC,EAAU,KAAEC,EAAa,KAqBhC,OACE,UAAC,EAAAC,SAAQ,YACP,SAAC,KAAM,CAACC,KAAMH,EAAYI,QAAS,SAACC,GAAQ,MAAK,2CAA2C,KAC5F,SAAC,EAAI,WACH,kBAAMC,QARW,WACrBL,GAAc,EAChB,EAMqCR,UAAWC,EAAca,SAvB9D,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAIzCpB,EAAMsB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,GAClD,EAc0F,UACjFrB,EAAMyB,YACL,gBAAKxB,UAAWC,EAAgB,UAC9B,SAACwB,EAAA,EAAc,OAInB,iBAAKzB,UAAWC,EAAgB,WAC9B,kBAAOyB,QAAQ,SAAQ,qBACvB,kBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK1B,QAEtC,iBAAKH,UAAWC,EAAgB,WAC9B,kBAAOyB,QAAQ,OAAM,mBACrB,qBAAUE,GAAG,OAAOE,KAAK,IAAID,IAAKxB,QAEpC,gBAAKL,UAAWC,EAAgB,UAC9B,mBAAQ8B,QA5BM,WACtBvB,GAAc,EAChB,EA0B4CR,UAAU,MAAK,gCAM7D,EChCA,EAnBiB,WACb,IAAMgC,GAAUC,EAAAA,EAAAA,MAChB,GAAgCC,EAAAA,EAAAA,GAAQC,EAAAA,IAAhCC,EAAW,EAAXA,YAAaC,EAAM,EAANA,QAErBC,EAAAA,EAAAA,YAAU,WACS,cAAXD,GACAL,EAAQO,KAAK,UAErB,GAAG,CAACF,EAAQL,IAMZ,OACI,SAAC,EAAS,CAACR,UAAsB,YAAXa,EAAsBhB,WANxB,SAACmB,GACrBJ,EAAYI,EAEhB,GAKJ,C","sources":["webpack://react-complete-guide/./src/components/UI/Card.module.css?26d0","components/UI/Card.js","webpack://react-complete-guide/./src/components/quotes/QuoteForm.module.css?b10c","components/quotes/QuoteForm.js","pages/NewQuote.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__I5vLO\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"QuoteForm_form__Hu6+A\",\"loading\":\"QuoteForm_loading__A7gCp\",\"control\":\"QuoteForm_control__WhLrL\",\"actions\":\"QuoteForm_actions__4CuRA\"};","import { Fragment, useRef, useState } from 'react';\r\nimport { Prompt } from 'react-router-dom';\r\n\r\nimport Card from '../UI/Card';\r\nimport LoadingSpinner from '../UI/LoadingSpinner';\r\nimport classes from './QuoteForm.module.css';\r\n\r\nconst QuoteForm = (props) => {\r\n  const authorInputRef = useRef();\r\n  const textInputRef = useRef();\r\n\r\n  const [isEntering, setIsEntering] = useState(false);\r\n\r\n  function submitFormHandler(event) {\r\n    event.preventDefault();\r\n\r\n    const enteredAuthor = authorInputRef.current.value;\r\n    const enteredText = textInputRef.current.value;\r\n\r\n    // optional: Could validate here\r\n\r\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\r\n  }\r\n\r\n  const onSubmitHandler = () => {\r\n    setIsEntering(false);\r\n  };\r\n\r\n  const onFocusHandler = () => {\r\n    setIsEntering(true);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Prompt when={isEntering} message={(location) => 'Are you sure you want to leave this page?'}></Prompt>\r\n      <Card>\r\n        <form onFocus={onFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\r\n          {props.isLoading && (\r\n            <div className={classes.loading}>\r\n              <LoadingSpinner />\r\n            </div>\r\n          )}\r\n\r\n          <div className={classes.control}>\r\n            <label htmlFor='author'>Author</label>\r\n            <input type='text' id='author' ref={authorInputRef} />\r\n          </div>\r\n          <div className={classes.control}>\r\n            <label htmlFor='text'>Text</label>\r\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\r\n          </div>\r\n          <div className={classes.actions}>\r\n            <button onClick={onSubmitHandler} className='btn'>Add Quote</button>\r\n          </div>\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteForm;\r\n","import { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport useHttp from '../hooks/hooks/use-http';\r\nimport { addQuote } from '../lib/lib/api';\r\n\r\nimport QuoteForm from './../components/quotes/QuoteForm';\r\n\r\nconst NewQuote = () => {\r\n    const history = useHistory();\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n    const addQuoteHandler = (quoteData) => {\r\n        sendRequest(quoteData);\r\n\r\n    };\r\n\r\n    return (\r\n        <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler}></QuoteForm>\r\n    );\r\n};\r\n\r\nexport default NewQuote;"],"names":["props","className","classes","children","authorInputRef","useRef","textInputRef","useState","isEntering","setIsEntering","Fragment","when","message","location","onFocus","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","LoadingSpinner","htmlFor","type","id","ref","rows","onClick","history","useHistory","useHttp","addQuote","sendRequest","status","useEffect","push","quoteData"],"sourceRoot":""}