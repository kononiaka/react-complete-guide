{"version":3,"file":"static/js/808.bdd23989.chunk.js","mappings":"4MACA,EAAuB,wB,SCmBvB,EAjBkB,SAACA,GAEjB,OACE,gBAAIC,UAAWC,EAAa,WAC1B,+BACE,iCACE,uBAAIF,EAAMG,UAEZ,gCAAaH,EAAMI,aAErB,SAAC,KAAI,CAACH,UAAU,MAAMI,GAAE,kBAAaL,EAAMM,IAAK,+BAKtD,ECjBA,EAAuB,wBAAvB,EAAyD,2BCmDzD,EApCkB,SAACN,GACjB,IAXkBO,EAAQC,EAWpBC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAIXC,EAA0C,QAF5B,IAAIC,gBAAgBH,EAASI,QAEjBC,IAAI,QAE9BC,GAlBYV,EAkBcP,EAAMO,OAlBZC,EAkBoBK,EAjBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOb,GAAKc,EAAOd,GAAK,GAAK,EAE7Ba,EAAOb,GAAKc,EAAOd,GAAK,GAAK,CAExC,KAoBA,OACE,UAAC,EAAAe,SAAQ,YACP,gBAAKC,QAToB,WAC3Bb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAYF,EAAc,OAAS,QAE7C,EAIwCZ,UAAWC,EAAgB,UAC7D,sCAAcW,EAAc,YAAc,mBAE5C,eAAIZ,UAAWC,EAAa,SACzBe,EAAaQ,KAAI,SAACC,GAAK,OACtB,SAAC,EAAS,CAERpB,GAAIoB,EAAMpB,GACVF,OAAQsB,EAAMtB,OACdD,KAAMuB,EAAMvB,MAHPuB,EAAMpB,GAIX,QAKZ,E,2BCjDA,EAA2B,gCCa3B,EAXsB,WACpB,OACE,iBAAKL,UAAWC,EAAiB,WAC/B,6CACA,SAAC,KAAI,CAACD,UAAU,MAAMI,GAAG,aAAY,2BAK3C,ECmBA,EAxBkB,WACd,OAA2DsB,EAAAA,EAAAA,GAAQC,EAAAA,IAAc,GAAzEC,EAAW,EAAXA,YAAaC,EAAM,EAANA,OAAcC,EAAY,EAAlBC,KAAoBC,EAAK,EAALA,MAMjD,OAJAC,EAAAA,EAAAA,YAAU,WACNL,GACJ,GAAG,CAACA,IAEW,YAAXC,GACO,iBAAK7B,UAAU,WAAU,WAC5B,SAACkC,EAAA,EAAc,IAAkB,OAIrCF,GACO,cAAGhC,UAAU,mBAAkB,SAAEgC,IAG7B,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,QAIrD,SAAC,EAAS,CAAC7B,OAAQwB,KAHhB,SAAC,EAAa,GAI7B,C","sources":["webpack://react-complete-guide/./src/components/quotes/QuoteItem.module.css?127c","components/quotes/QuoteItem.js","webpack://react-complete-guide/./src/components/quotes/QuoteList.module.css?9d5d","components/quotes/QuoteList.js","webpack://react-complete-guide/./src/components/quotes/NoQuotesFound.module.css?2c4b","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"QuoteItem_item__nJrt+\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"QuoteList_list__Qc+l2\",\"sorting\":\"QuoteList_sorting__2iNK7\"};","import { Fragment } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport QuoteItem from './QuoteItem';\r\nimport classes from './QuoteList.module.css';\r\n\r\nconst sortQuotes = (quotes, ascending) => {\r\n  return quotes.sort((quoteA, quoteB) => {\r\n    if (ascending) {\r\n      return quoteA.id > quoteB.id ? 1 : -1;\r\n    } else {\r\n      return quoteA.id < quoteB.id ? 1 : -1;\r\n    }\r\n  });\r\n};\r\n\r\nconst QuoteList = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const queryParams = new URLSearchParams(location.search);\r\n\r\n  const isAscending = queryParams.get(\"sort\") === \"asc\";\r\n\r\n  const sortedQuotes = sortQuotes(props.quotes, isAscending);\r\n\r\n  const changeSortingHandler = () => {\r\n    history.push({\r\n      pathname: location.pathname,\r\n      search: `?sort=${(isAscending ? \"desc\" : \"asc\")}`\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div onClick={changeSortingHandler} className={classes.sorting}>\r\n        <button>Sort {isAscending ? \"Ascending\" : \"Descending\"}</button>\r\n      </div>\r\n      <ul className={classes.list}>\r\n        {sortedQuotes.map((quote) => (\r\n          <QuoteItem\r\n            key={quote.id}\r\n            id={quote.id}\r\n            author={quote.author}\r\n            text={quote.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"noquotes\":\"NoQuotesFound_noquotes__UQAR1\"};","import classes from './NoQuotesFound.module.css';\nimport { Link } from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import QuoteList from './../components/quotes/QuoteList';\r\nimport useHttp from '../hooks/hooks/use-http';\r\nimport { getAllQuotes } from '../lib/lib/api';\r\nimport { useEffect } from 'react';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from './../components/quotes/NoQuotesFound';\r\n\r\nconst AllQuotes = () => {\r\n    const { sendRequest, status, data: loadedQuotes, error } = useHttp(getAllQuotes, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner></LoadingSpinner>;\r\n        </div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <p className='centered focused'>{error}</p>;\r\n    }\r\n\r\n    if (status === 'completed' && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n        return <NoQuotesFound />;\r\n    }\r\n\r\n    return (<QuoteList quotes={loadedQuotes}></QuoteList>);\r\n};\r\n\r\nexport default AllQuotes;"],"names":["props","className","classes","text","author","to","id","quotes","ascending","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","Fragment","onClick","push","pathname","map","quote","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"sourceRoot":""}