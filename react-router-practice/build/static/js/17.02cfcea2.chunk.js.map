{"version":3,"file":"static/js/17.02cfcea2.chunk.js","mappings":"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","sources":["webpack://react-complete-guide/./src/components/comments/Comments.module.css?d88e","webpack://react-complete-guide/./src/components/comments/NewCommentForm.module.css?81c1","components/comments/NewCommentForm.js","webpack://react-complete-guide/./src/components/comments/CommentItem.module.css?204f","components/comments/CommentItem.js","webpack://react-complete-guide/./src/components/comments/CommentsList.module.css?06d6","components/comments/CommentsList.js","components/comments/Comments.js","webpack://react-complete-guide/./src/components/quotes/HighlightedQuote.module.css?c98c","components/quotes/HighlightedQuote.js","pages/QuotesDetail.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"Comments_comments__nQyuV\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"NewCommentForm_form__80qKp\",\"loading\":\"NewCommentForm_loading__6nf7J\",\"control\":\"NewCommentForm_control__8rw3q\",\"actions\":\"NewCommentForm_actions__6dxOD\"};","import { useRef, useEffect } from 'react';\n\nimport useHttp from '../../hooks/hooks/use-http';\nimport { addComment } from '../../lib/lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    const enteredText = commentTextRef.current.value;\n\n    // optional: Could validate here\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CommentItem_item__TAgL9\"};","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"comments\":\"CommentsList_comments__7un1N\"};","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\nimport useHttp from './../../hooks/hooks/use-http';\nimport { getAllComments } from '../../lib/lib/api';\nimport { useEffect } from 'react';\nimport LoadingSpinner from './../UI/LoadingSpinner';\nimport CommentsList from './CommentsList';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  const { quoteId } = params;\n\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const onAddCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId, onAddCommentHandler]);\n\n  let comments;\n  if (status === 'pending') {\n    comments = <div className='centered'><LoadingSpinner></LoadingSpinner></div>;\n  }\n\n  if (status === 'completed' && loadedComments) {\n    comments = <CommentsList comments={loadedComments}></CommentsList>;\n  }\n\n  if (status === 'completed' && (!loadedComments || loadedComments.length === 0)) {\n    comments = <p className='centered'>No commets...</p>;\n  }\n\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm quoteId={quoteId} onAddedComment={onAddCommentHandler} />}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"quote\":\"HighlightedQuote_quote__FrgBu\"};","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useEffect } from \"react\";\r\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport Comments from '../components/comments/Comments';\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/lib/api\";\r\nimport HighlightedQuote from './../components/quotes/HighlightedQuote';\r\n\r\nconst QuoteDetail = () => {\r\n    const params = useParams();\r\n    const match = useRouteMatch();\r\n\r\n    const { quoteId } = params;\r\n\r\n    const { sendRequest, status, data: loadedQuote, error } = useHttp(getSingleQuote, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId]);\r\n\r\n    if (status === 'pending') {\r\n        return <div className=\"centered\">\r\n            <LoadingSpinner></LoadingSpinner>;\r\n        </div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div className=\"centered focused\">{error}</div>;\r\n    }\r\n\r\n    if (!loadedQuote.text) {\r\n        return <p>No quote!</p>;\r\n    }\r\n\r\n    return (\r\n        <section>\r\n            <HighlightedQuote author={loadedQuote.author} text={loadedQuote.text} />\r\n            <Route path={match.path} exact>\r\n                <div className=\"centered\">\r\n                    <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>Loading comment</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default QuoteDetail;"],"names":["props","commentTextRef","useRef","useHttp","addComment","sendRequest","status","error","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredText","current","value","commentData","text","quoteId","className","classes","onSubmit","LoadingSpinner","htmlFor","id","rows","ref","comments","map","comment","useState","isAddingComment","setIsAddingComment","params","useParams","getAllComments","loadedComments","data","onAddCommentHandler","useCallback","length","onClick","author","match","useRouteMatch","getSingleQuote","loadedQuote","path","exact","to"],"sourceRoot":""}